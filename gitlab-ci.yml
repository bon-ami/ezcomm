image: golang:latest

# docker run -it golang

# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - test
  - build
#  - deploy

before_script:
  - echo "Preparing the tools..."
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes golang gcc libgl1-mesa-dev xorg-dev xz-utils gcc-mingw-w64-x86-64 unzip apksigner
  - go install fyne.io/fyne/v2/cmd/fyne@latest
  - go install golang.org/x/lint/golint@latest
  - go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
  - wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
  #- wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
  - unzip android-ndk-r25c-linux.zip
  #- unzip commandlinetools-linux-9477386_latest.zip
  #- pwd; ls android-ndk-r25c #; ls commandlinetools-linux-9477386_latest
  - export ANDROID_NDK_HOME="${PWD}/android-ndk-r25c"

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  variables:
    SECURE_FILES_DOWNLOAD_PATH: './'
  script:
    - echo "Getting secure files..."
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
#    - ls -a
    - echo "Compiling the code..."
    - ./build.sh ${CI_COMMIT_TAG}
  artifacts:
    paths:
    - EZComm
    - EZComm_debug
    - EZComm.exe
    - EZComm_debug.exe
    - EZComm.apk
    - EZComm_debug.apk

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - go test ./...
    - go test -cover

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... "
    - go vet ./...
    - golint -set_exit_status $(go list ./...)
    - gocyclo -over 30 .

#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  environment: production
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
